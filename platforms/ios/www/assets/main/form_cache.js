function FormCache(){this.templates={deviation:{title:"Avmeld avvik",form_fix_deviation:{deviation:function(a){return a.deviation_description},initial_action:function(a){return a.initial_action},deviation_date:{date:function(a){return a.deviation_deadline},timezone_type:3,timezone:"Asia/Bangkok"},form:{responsible_fix_deviation:{type:"hidden",value:function(a){for(var b=0;b<a.formData.employee_id.list.length;b++)if(a.formData.employee_id.list[b][a.employee_id])return a.formData.employee_id.list[b][a.employee_id];return""}},responsible_fix_deviation_id:{type:"hidden",value:function(a){return a.employee_id}},correctional_measure:{label:"Korrigerende tiltak",type:"textarea",placeholder:"Beskriv hvilke korrigerende tiltak du har tatt for å rette avviket.",validation:["required","string"],value:""},upload_photo:{label:"Ta eller last opp bilde",type:"file"},date_deviation_fix:{type:"date",label:"Dato for retting av avvik"}},deviation_photos:function(a){return a.deviation_photos}},form_deviation:{task_id:{type:"hidden",value:""},deviation_description:{type:"textarea",label:"Avviksbeskrivelse",validation:["required","string"],value:""},initial_action:{type:"textarea",label:"Strakstiltak",validation:["required","string"]},upload_photo:{label:"Ta eller last opp bilde",type:"file"},employee_id:{type:"select",list:function(a){return a.deviation_description},label:"Ansvarlig for tiltak",validation:["required","string"]},deviation_deadline:{type:"date",label:"Tidsfrist for tiltak",validation:["required","string"]},signature:{label:"Signatur",type:"signature",validation:["required","string"]}}},maintenance:{title:"Vedlikehold",form_fix_deviation:{deviation:function(a){return a.deviation_description},initial_action:function(a){return a.initial_action},deviation_date:{date:function(a){return a.deviation_deadline},timezone_type:3,timezone:"Asia/Bangkok"},form:{responsible_fix_deviation:{type:"hidden",value:function(a){for(var b=0;b<a.formData.employee_id.list.length;b++)if(a.formData.employee_id.list[b][a.employee_id])return a.formData.employee_id.list[b][a.employee_id];return""}},responsible_fix_deviation_id:{type:"hidden",value:function(a){return a.employee_id}},correctional_measure:{label:"Korrigerende tiltak",type:"textarea",placeholder:"Beskriv hvilke korrigerende tiltak du har tatt for å rette avviket.",validation:["required","string"],value:""},upload_photo:{label:"Ta eller last opp bilde",type:"file"},date_deviation_fix:{type:"date",label:"Dato for retting av avvik"}},deviation_photos:function(a){return a.deviation_photos}}},food_poision:{title:"Matforgiftning",form_fix_deviation:{Symptomer:function(a){for(var b="",c=0;c<a.symptoms.length;c++)b+=a.formData.symptoms.list[c+1].label,c<a.symptoms.length-1&&(b+=" ");return b},"Tid og dato for symptomer":function(a){return a.symptomsDateTime},"Hvor lenge har symptomene vart":function(a){return a.symptom_days+" Dager, "+a.symptom_hours+" Timer"},"Tid og dato for tilberedning av maten":function(a){return a.makingFoodDateTime},"Hvem deltok i måltidet":function(a){return a.makingFoodTotalGuests+" Totalt antall gjester, "+a.makingFoodSickGuests+" Syke gjester"},"Hvilken mat ble laget":function(a){return a.makingFoodWhatFood},"Mat spist tidligere denne dagen":function(a){return a.makingFoodEarlierEaten},"Har gjesten kontaktet lege?":function(a){return a.guestTalkedDoctor?"Ja":"Nei"},Ingredienser:function(a){return a.ingredients},"Nedkjølt?":function(a){return a.cooledDown?"Ja":"Nei"},"Oppvarmet igjen?":function(a){return a.reheated?"Ja":"Nei"},"Holdt varmt?":function(a){return a.keptWarm?"Ja":"Nei"},"Er det rester igjen for analyse?":function(a){return a.restLeftAnalysis?"Ja":"Nei"},"Umiddelbare tiltak":function(a){return a.immediateMeasures},"Annen informasjon":function(a){return a.otherComplaints},"Kompensasjon til gjesten":function(a){return a.guestCompensation},form:{type:{type:"hidden",value:"food_poison_fix"},task_id:{type:"hidden",value:""},responsible_fix_deviation:{type:"hidden",value:function(a){for(var b=0;b<a.formData.employee_id.list.length;b++)if(a.formData.employee_id.list[b][a.employee_id])return a.formData.employee_id.list[b][a.employee_id];return""}},responsible_fix_deviation_id:{type:"hidden",value:function(a){return a.employee_id}},correctionalMeasures:{type:"textarea",label:"Korrigerende tiltak",validation:["string"]},signature:{label:"Tidsfrist for tiltak",type:"signature",validation:["required","string"]},date_deviation_fix:{type:"date",label:"Dato for retting av avvik",value:function(a){return{date:(new Date).toISOString().substring(0,10),timezone_type:3,timezone:"Asia/Bangkok"}},placeholder:"Dato for retting av avvik"}}}}}}function executeForm(a,b){var c={};if("object"==typeof b)for(key in b)b.hasOwnProperty(key)&&("function"==typeof b[key]?c[key]=b[key](a):"object"==typeof b[key]?c[key]=executeForm(a,b[key]):c[key]=b[key]);return c}FormCache.prototype.getTemplate=function(a,b){b(this.templates[name])},FormCache.prototype.getPhotoFromDB=function(a,b){a&&db.getDbInstance("sync_query").query(function(b,c){b.extra==a.id&&"uploadPhotos"==b.api&&c(b._id,b.data)},function(a,c){for(var d=[],e=0;e<c.rows.length;e++){var f=JSON.parse(c.rows[e].value),g=f.data||f.imageURI;d.push(g)}b(d)})},FormCache.prototype.saveToTaskList=function(a,b,c){var d=this.templates[a],e=this;this.getPhotoFromDB(b,function(f){b.form_fix_deviation&&(b.form_fix_deviation.deviation_photos=f),db.getDbInstance("form_item").query(function(b,c){b.type==a&&c(b._id,b.form)},function(f,g){if(console.log("error",f,g),f)return void c(!1);var h;b.form_deviation?(delete d.form_fix_deviation,h=$.extend(!0,d,b)):(delete d.form_deviation,b.form_fix_deviation.formData=JSON.parse(g.rows[0].value),h=executeForm(b.form_fix_deviation,d)),("deviation"==a||"maintenance"==a)&&e.insertTaskToDB(a,b.id,h,c)})})},FormCache.prototype.generateFoodPoisonTask=function(a,b,c){var d=this.templates[a],e=this;db.getDbInstance("form_item").query(function(b,c){b.type==a&&c(b._id,b.form)},function(f,g){return f?void c(!1):void(b&&(b.formData=JSON.parse(g.rows[0].value),form=executeForm(b,d),e.insertTaskToDB(a,b.id,form,c)))})},FormCache.prototype.insertTaskToDB=function(a,b,c,d){if(c){var e=new Date,f=[];if(c.form_fix_deviation){var g="";c.form_fix_deviation.deviation_date?g=c.form_fix_deviation.deviation_date.date:c.form_fix_deviation.date_deviation_fix&&(g=c.form_fix_deviation.date_deviation_fix.date),f=[b,c.title,a,new Date(g).getTime()>e.getTime(),JSON.stringify(g),0,md5(JSON.stringify(c)),e.toISOString().substring(0,10),JSON.stringify(c)]}else f=[b,c.title,a,!1,"",0,md5(JSON.stringify(c)),e.toISOString().substring(0,10),JSON.stringify(c)];db.lazyQuery("tasks",castToListObject(["id","title","type","overdue","dueDate","completed","check","date_start","taskData"],[f]),d,f)}};